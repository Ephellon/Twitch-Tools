/*
* Prefixed by https://autoprefixer.github.io
* PostCSS: v8.4.14,
* Autoprefixer: v10.4.7
* Browsers: Chrome > 80, Firefox > 80
*/

/* Globals */
button[class*="tt-"i]:hover { background-color: #fff3 }
button[class*="tt-"i].purple { background-color: var(--color-background-button-primary-active) }
button[class*="tt-"i].purple:hover { background-color: var(--color-background-button-primary-hover) }

:root {
    /* https://www.facemediagroup.co.uk/resources/a-to-z-guides/a-to-z-of-colours/ */
    /* Red Amber Ivory Nevgan Blue Orchid Wisteria */
    --rainbow: linear-gradient(0, #ff0000, #ffbf00, #fffff0, #29752a, #0000ff, #da70d6, #c9a0dc);
}

/* Scrollbars */
::-webkit-scrollbar {
    width: .6rem;
}
::-webkit-scrollbar-button {
    background: transparent;
    display: none;
    visibility: hidden;

    height: 0;
    width: 0;
}
::-webkit-scrollbar-thumb {
    background: #0008;
    border: 1px solid #fff4;
    border-radius: .5rem;
}
::-webkit-scrollbar-track {
    background: #0000;
}
::-webkit-scrollbar-corner {
    background: transparent;
}

/* Misc. */
table {
    width: -webkit-fill-available;
    width: -moz-available;
    width: stretch;
}

caption {
    text-align: center;
}

.tt-hide-text-overflow {
    display: block;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

.tt-hide-inline-text-overflow {
    display: inline-block;
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}

.tt-live, .tt-offline {
    background-color: #e91916;
    /* border: 2px solid #0e0e0f; */
    border-radius: 4px;
    color: #fff;
    display: inline-block;
    font-family: Roobert, Inter, "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 80%;
    font-weight: bold;
    text-align: center;
    text-transform: uppercase;

    padding: .1rem .3rem;
}

.tt-offline {
    background-color: #8883;
    color: var(--color-text-interactable);
}

/* Tooltips */
[role="tooltip"].img-container { /* adjust tooltips with SVGs or IMGs */ }

.tt-dialog-layer [data-popper-escaped="true"i] {
    max-width: 25rem;
    width: max-content;
}

.tooltip-layer {
    pointer-events: none;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 999;
}

.tt-relative {
    position: relative !important;
}

.tt-inline-flex {
    display: inline-flex !important;
}

:is(.tooltip-layer, .tt-context-menu, .tt-alert, .tt-confirm, .tt-prompt, .tt-select) h1 {
    font-size: x-large !important;
}

:is(.tooltip-layer, .tt-context-menu, .tt-alert, .tt-confirm, .tt-prompt, .tt-select) h2 {
    font-size: larger !important;
}

:is(.tooltip-layer, .tt-context-menu, .tt-alert, .tt-confirm, .tt-prompt, .tt-select) h3 {
    font-size: large !important;
}

:is(.tooltip-layer, .tt-context-menu, .tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(h4, h5, h6) {
    font-size: initial !important;
}

:is(.tooltip-layer, .tt-context-menu, .tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(ol, ul) {
    list-style: initial !important;
}

:is(.tooltip-layer, .tt-context-menu, .tt-alert, .tt-confirm, .tt-prompt, .tt-select) pre {
    display: inline-block;
    font-family: monospace!important;

    float: right;
    margin-right: 1rem;
}

:is(.tooltip-layer, .tt-context-menu, .tt-alert, .tt-confirm, .tt-prompt, .tt-select) code, code[tt-code] {
    background-color: var(--color-background-tooltip)!important;
    border-radius: 4px;
    color: var(--color-background-base)!important;
    font-family: 'Liberation Mono', 'Courier', 'Consolas', 'Monospace', 'System-UI', 'Arial'!important;
    font-size: 100%!important;
    font-weight: normal;

    padding: 0 4px!important;
}

:is(.tt-select) {
    display: block;
    flex-direction: column;
    vertical-align: baseline;
}

:is(.tt-select) .tt-select-input {
    background: inherit;
    color: inherit;
    display: block;
    overflow: auto;
    text-align: start;

    min-height: 5rem;
    height: -moz-fit-content;
    height: fit-content;
    max-height: 30rem;
    width: -webkit-fill-available;
    width: -moz-available;
    width: stretch;

    /* Fix blurry text */
    /* https://stackoverflow.com/a/27464561/4211612 */
    transform: translate(0);
}

:is(.tt-select) .tt-select-input:is([data-multiple="true"i], [data-multiple="yes"i], [data-multiple="1"i])::before {
    content: 'Multiple options can be selected.';

    background: inherit;
    color: var(--color-text-alt-2);
    display: block;
    font-size: small;
    font-style: italic;
    text-align: center;

    position: sticky;
    top: 0;

    width: -webkit-fill-available;
    width: -moz-available;
    width: stretch;
}

:is(.tt-select) .tt-option {
    height: 1.6rem;
    margin: .5rem 1.6rem;
}

:is(.tt-select) .tt-option input {
    display: none;

    height: 0;
    width: 0;
}

:is(.tt-select) .tt-option label {
    color: var(--color-text-alt);
    cursor: pointer;
    display: inline-block;

    position: relative;
    padding: 0 0 0 1.3rem;

    transition: background-color .1s ease;
}

:is(.tt-select) .tt-option label::before {
    content: '';

    background-clip: padding-box;
    border: 2px solid var(--color-white);
    border-radius: 50%;
    box-sizing: border-box;

    position: absolute;
    left: 0;
    transform: translate(-100%);

    height: 1.6rem;
    width: 1.6rem;

    transition: box-shadow .1s ease-in,
        background .1s ease-in;
}

:is(.tt-select) .tt-select-input:is([data-multiple="true"i], [data-multiple="yes"i], [data-multiple="1"i]) label::before {
    border-radius: 25% !important;
}

:is(.tt-select) .tt-option input:checked ~ label::before {
    background-color: var(--color-twitch-purple);
    border: 6px double var(--color-twitch-purple);
}

/* Ensure notices are first come, first serve */
.tt-post:not(.tt-post ~ .tt-post) {
    z-index: 999999999 !important;
}

.tt-post:not(.tt-post ~ .tt-post) > [count]:is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container)::after {
    content: "All Messages (" attr(count) ")";

    background: var(--color-background-base);
    border: 1px solid var(--channel-color);
    border-radius: 10rem;
    outline: none;
    text-align: center;

    position: absolute;
    top: -5rem;
    left: 50%;
    transform: translate(-50%,50%);

    padding: .65rem 1rem 1.5rem;

    height: 1rem;
    width: 6rem;

    transition: all .5s ease-in;
}

.tt-tooltip-wrapper[show], img ~ .tt-tooltip, [tt-x] {
    display: none !important;
}

.tt-tooltip-wrapper[show="true"i] {
    display: block !important;
}

.tt-tooltip {
    background-color: var(--color-background-tooltip);
    border-radius: .4rem;
    color: var(--color-text-tooltip);
    font-family: inherit;
    font-size: 100%;
    font-weight: 600;
    line-height: 1.2;
    padding: .5rem;
    pointer-events: none;
    position: absolute;
    text-align: left;
    user-select: none;
    white-space: nowrap;
    z-index: 9999;
}

.tt-tooltip::after, .tt-tooltip::before {
    content: '';
    position: absolute;
}

.tt-tooltip::before {
    left: -6px;
    top: -6px;
    z-index: -1;

    height: calc(100% + 12px);
    width: calc(100% + 12px);
}

.tt-tooltip::after {
    /* background-color: var(--color-background-tooltip); */

    transform: rotate(45deg);
    z-index: -1;

    height: 6px;
    width: 6px;
}

.tt-root--theme-dark .tt-tooltip::after {
    mix-blend-mode: color-burn;
}

.tt-root--theme-light .tt-tooltip::after {
    mix-blend-mode: color-dodge;
}

/* Directionally aligned tooltips */
/* Center */
:is(.tt-tooltip--up, .tt-tooltip--down).tt-tooltip--align-center {
    left: 50%;
    transform: translateX(-50%);
}

:is(.tt-tooltip--up, .tt-tooltip--down).tt-tooltip--align-center::after {
    left: 50%;
    margin-left: -3px;
}

:is(.tt-tooltip--left, .tt-tooltip--right).tt-tooltip--align-center {
    top: 50%;
    transform: translateY(-50%);
}

:is(.tt-tooltip--left, .tt-tooltip--right).tt-tooltip--align-center::after {
    margin-top: -3px;
    top: 50%;
}

/* Left */
/* ??? */

/* Right */
:is(.tt-tooltip--up, .tt-tooltip--down).tt-tooltip--align-right {
    left: auto;
    right: 0;
}

:is(.tt-tooltip--up, .tt-tooltip--down).tt-tooltip--align-right::after {
    left: 100%;
    margin-left: -12px;
    top: 100%;
}

/* Up (over) tooltip */
.tt-tooltip--up {
    bottom: 100%;
    left: 0;
    margin-bottom: 6px;
    top: auto;
}

.tt-tooltip--up::after {
    background: linear-gradient(-40deg, #fff 0 50%, #0000 0 0);
    border-radius: 0 0 .4rem;
    height: 6px;
    left: 6px;
    margin-top: -3px;
    top: 100%;
    z-index: -1;
}

/* Down (under) tooltip */
.tt-tooltip--down {
    left: 0;
    margin-top: 6px;
    top: 100%;
}

.tt-tooltip--down::after {
    background: linear-gradient(140deg, #fff 0 50%, #0000 0 0);
    border-radius: .4rem 0 0;
    height: 6px;
    left: 6px;
    top: -3px;
    transform: rotate(45deg);
    width: 6px;
    z-index: -1;
}

/* Left tooltip */
.tt-tooltip--left {
    left: auto;
    margin-right: 6px;
    right: 100%;
    top: 0;
}

.tt-tooltip--left::after {
    background: linear-gradient(230deg, #fff 0 50%, #0000 0 0);
    border-radius: 0 .4rem 0 0;
    left: 100%;
    margin-left: -3px;
    right: -3px;
    top: 6px;
}

/* Right tooltip */
.tt-tooltip--right {
    left: 100%;
    margin-left: 6px;
    top: 0;
}

.tt-tooltip--right::after {
    background: linear-gradient(50deg, #fff 0 50%, #0000 0 0);
    border-radius: 0 0 0 .4rem;
    left: 0;
    margin-left: -3px;
    top: 6px;
}

/* Native tooltips */
[fade-right]::before {
    content: "";

    background: linear-gradient(to right, #fff, #000);
    border-radius: 6px;
    mix-blend-mode: multiply;

    height: 100%;
    width: calc(100% - 1rem);

    position: absolute;
    margin-left: 1rem;
}

/* Janky Tooltips */
[tt-title]:hover::after {
    animation: .5s fade-in 1;
    content: attr(tt-title);

    background-color: var(--color-background-tooltip);
    border-radius: .4rem;
    color: var(--color-text-tooltip);
    display: inline-block;
    font-family: inherit;
    font-size: 75%;
    pointer-events: none;
    text-align: center;
    user-select: none;
    white-space: break-spaces;

    padding: .5rem;

    height: -moz-fit-content;

    height: fit-content;
    width: -moz-fit-content;
    width: fit-content;

    left: inherit;
    position: absolute;
    transform: translate(-50%, -100%);
    z-index: 9999;
}

/* Alerts, Confirmations, Prompts and Selections */
:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is([disabled]:not([disabled="false"i]), [is-disabled]:not([is-disabled="false"i])) {
    cursor: not-allowed!important;
    opacity: 0.5!important;
}

:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is([hidden]:not([hidden="false"i]), [is-hidden]:not([is-hidden="false"i])) {
    display: none!important;
}

.tt-alert, .tt-confirm, .tt-prompt, .tt-select {
    animation: 1s fade-in 1;

    background: #000d;
    display: block;
    font-size: 1em;
    opacity: 1;

    position: fixed;
    left: 0;
    top: 0;
    z-index: 99999;

    height: 100vh;
    width: 100vw;
}

@keyframes fade-in {
    from { opacity: 0 }
    to { opacity: 1 }
}

.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container {
    background: linear-gradient(45deg, var(--user-accent-color), var(--user-contrast-color));
    border-radius: 0.3em;

    padding: 0.15em;

    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);

    min-width: 25vw;
    max-width: 35vw;
    width: -moz-fit-content;
    width: fit-content;
}

:is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container) > * {
    background: var(--color-background-base);
    padding: 1em;
}

.tt-alert-header, .tt-confirm-header, .tt-prompt-header, .tt-select-header {
    font-family: var(--font-display);
    font-size: 1.25em;
    font-weight: bold;

    padding-bottom: 0.5em;
}

.tt-alert-body, .tt-confirm-body, .tt-prompt-body, .tt-select-body {
    /* ... */
}

.tt-alert-footer, .tt-confirm-footer, .tt-prompt-footer, .tt-select-footer {
    text-align: right;
}

:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(button, [type="button"]) {
    align-items: center;
    display: inline-block;
    justify-content: center;

    background-color: var(--color-twitch-purple);
    border-radius: 0.2em;
    color: var(--color-white);
    cursor: pointer;
    font-family: Roobert;
    font-weight: bold;

    transition: background-color .1s ease;

    overflow: hidden;

    margin: 5px 10px;
    padding: 5px 10px;

    vertical-align: middle;
}

:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) input:invalid {
    border-color: var(--color-warn)!important;
}

:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) *.remove {
    background-color: var(--color-red);
}

:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) *.edit {
    background-color: var(--color-hinted-grey-6);
}

:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(button, input[type="button"]):hover {
    background-color: var(--color-twitch-purple-10);
}

:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) *.remove:hover  {
    background-color: var(--color-red-darker) !important;
}

:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) *.edit:hover  {
    background-color: var(--color-hinted-grey-7) !important;
}

:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(textarea, input[type="number"i], input[type="password"i], input[type="text"i]) {
    -webkit-appearance: none;
            appearance: none;
    background-clip: padding-box;
    background-color: var(--color-hinted-grey-6);
    border: 2px solid var(--color-hinted-grey-6);
    border-radius: 0.2em;
    color: var(--color-white);
    display: block;
    font-size: 100%;
    line-height: 1;
    text-overflow: ellipsis;

    transition: all .1s ease-in;

    overflow-x: hidden;
    resize: none;

    padding: 1em;

    height: 1em;
    width: 100%;
}

:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(textarea, input):focus {
    background-color: var(--color-black);
    border-color: var(--color-prime-blue);

    outline: none;
}

.tt-done:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select):not(.tt-silent) {
    animation: 1s fade-out 1;

    opacity: 0;
}

@keyframes fade-out {
    from { opacity: 1 }
    to { opacity: 0 }
}

/* Silent alerts, confirmations, and prompts */
.tt-silent:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) {
    background: none;

    margin-top: 100%;
}

.tt-silent:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container) {
    animation: 1s glide-in-from-bottom--silent 1;

    margin-top: -100%;
    top: 99%;
    transform: translate(-50%, -100%);
}

@keyframes glide-in-from-bottom--silent {
    from { top: 200% }
    to { top: 99% }
}

.tt-silent.tt-veiled:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container) {
    transition: transform .6s, opacity .3s;

    top: 99%;
    transform: translate(-50%, calc(1% + .1em));
}

.tt-silent.tt-veiled:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container):is(:hover, :focus-within) {
    opacity: 1;

    transform: translate(-50%, -100%);
}

.tt-post:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) [count]:is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container):is(:hover, :focus-within)::after {
    opacity: 0;
}

.tt-silent:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) .tt-alert-container,
.tt-silent:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) .tt-confirm-container,
.tt-silent:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) .tt-prompt-container,
.tt-silent:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) .tt-select-container {
    /* border: 1px solid var(--user-contrast-color); */

    --current-border-color: var(--user-contrast-color);

    min-width: 30rem;
}

.tt-silent.tt-done:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container) {
    animation: .6s glide-out-to-bottom--silent 1;

    top: 200%;
}

@keyframes glide-out-to-bottom--silent {
    from { top: 99% }
    to { top: 200% }
}

.tt-silent.tt-veiled:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container)::before {
    content: "\1F92B";

    transition: opacity .3s, top .6s;
    transition-delay: .3s;

    background: inherit;
    /* border: 1px solid var(--current-border-color); */
    border-radius: 0.25em;
    display: inline-block;
    font-size: 1em;
    font-weight: bold;
    mix-blend-mode: darken;
    opacity: 1;
    text-align: center;

    margin-top: -1em;
    position: fixed;
    left: 50%;
    top: 0;

    padding: .1em .5em .4em;

    height: 1em;
    width: -moz-fit-content;
    width: fit-content;

    transform: translate(-50%, -50%);
}

.tt-silent.tt-veiled:is(.tt-alert) :is(.tt-alert-container)::before {
    /* ⚠ - Warning */
    content: "\26A0";
}

.tt-silent.tt-veiled:is(.tt-confirm) :is(.tt-confirm-container)::before {
    /* ✔ - Checkmark */
    content: "\2714";
}

.tt-silent.tt-veiled:is(.tt-prompt) :is(.tt-prompt-container)::before {
    /* ⌨ - Keyboard */
    content: "\2328";
}

.tt-silent.tt-veiled:is(.tt-select) :is(.tt-select-container)::before {
    /* 🗳 - Ballot */
    content: "\01f5f3";
}

.tt-silent.tt-veiled :is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container)[icon]::before {
    content: attr(icon)!important;
}

.tt-silent.tt-veiled:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container)::before {
    top: 3px;
}

.tt-silent.tt-veiled:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select):is(:hover, :focus-within) :is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container)::before {
    opacity: 0;
    top: 3em;
}

[class*="root"i][class*="theme-light"i] .tt-silent.tt-veiled:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container)::before {
    mix-blend-mode: lighten;
}

:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container) > *:not(:first-child) {
    margin: -1px 0;
}

:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container) > :first-child {
    border-top-left-radius: 0.2em;
    border-top-right-radius: 0.2em;
}

:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container) > :last-child {
    border-bottom-left-radius: 0.2em;
    border-bottom-right-radius: 0.2em;
}

@keyframes shake {
    10%, 90% {
        transform: translate(-55%, -50%);
    }

    20%, 80% {
        transform: translate(-45%, -50%);
    }

    30%, 50%, 70% {
        transform: translate(-52.5%, -50%);
    }

    40%, 60% {
        transform: translate(-42.5%, -50%);
    }
}

/* Timed alerts, confirmations, and prompts */
.tt-timed:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(.tt-alert-time, .tt-confirm-time, .tt-prompt-time, .tt-select-time) {
    display: inline-block;

    float: right;
    padding-left: 1em;
}

.tt-timed:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) [tt-done="true"i]:is(.tt-alert-time, .tt-confirm-time, .tt-prompt-time, .tt-select-time) {
    transition: opacity .3s;

    opacity: 0;
}

.tt-timed.tt-veiled:is(.tt-alert, .tt-confirm, .tt-prompt, .tt-select) :is(.tt-alert-container, .tt-confirm-container, .tt-prompt-container, .tt-select-container)::before {
    content: attr(tt-time-left);
    /* content: "\23F1"; */

    animation: shake 0.82s cubic-bezier(.36, .07, .19, .97) infinite 37s;
}

/* Units */
[unit] {
    white-space: nowrap;
}

[unit] > input {
    border-right: 0;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;

    margin-right: 0;
    padding-right: 0;
    vertical-align: middle;
}

[unit]::after {
    content: attr(unit);

    -webkit-appearance: none;
            appearance: none;
    background-clip: padding-box;
    background-color: var(--color-background-base);
    border: 2px solid var(--color-background-base);
    border-left: 0;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
    border-radius: 3px;
    color: var(--color-text-base);
    display: inline;
    font-size: 100%;
    line-height: 1;
    opacity: .5;
    text-align: center;
    text-overflow: ellipsis;

    transition: all .1s ease-in;

    overflow-x: hidden;
    resize: none;

    margin-left: 0;
    padding: calc(.5rem - 2px);
    vertical-align: -15%;

    height: 2rem;
    width: 5rem;
}

[unit][focus="true"i]::after {
    border-color: var(--color-twitch-purple);
    opacity: 1;
}

[unit][valid="false"i]::after {
    border-color: var(--color-yellow);
}

/* Notices */
[data-recording-status="true"i] {
    border: 1px solid red!important;
}

/* About Panel - Actions */
.about-section__actions > [action-origin]:first-child:not(:only-child) {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}

.about-section__actions > [action-origin]:not(:first-child) {
    border-top: var(--border-width-default) solid var(--color-border-base);
    border-top-left-radius: 0;
    border-top-right-radius: 0;
}

.about-section__actions > [action-origin]:not(:last-child) {
    border-bottom: var(--border-width-default) solid var(--color-border-base);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}

[tt-action] {
    background-color: var(--color-background-base);
    border-radius: 0.4rem;

    padding: 0.5rem 1rem;
}

[tt-action] button {
    padding: 0.5rem 0;
}

[tt-action] button > * {
    background-color: var(--color-background-base);
    border-radius: 0.4rem;
    display: flex;

    padding: 1rem;
}

[tt-action] button > *:hover {
    background-color: var(--color-background-alt);
}

.tt-action-icon {
    padding-right: 1rem;
}

.tt-action-icon + * {
    color: var(--color-text-base);
}

.tt-action-title {
    font-size: var(--font-size-5);
    font-weight: var(--font-weight-semibold);
    line-height: var(--line-height-heading);
}

.tt-action-subtitle {
    color: var(--color-text-alt-2);
    font-size: var(--font-size-6);
}

/* Blank Ads */
.tt-stream-preview[blank-ad="true"i] {
    border-radius: 5rem !important;

    top: 5rem !important;

    height: 5rem !important;
    width: 5rem !important;
}

.tt-stream-preview[blank-ad="true"i]::before {
    content: "Ad";
    transition: all .6s fade-in 1;

    background: var(--color-twitch-purple);
    border: 2.5rem solid var(--color-twitch-purple);
    border-radius: 5rem;
    transform: translate(-50%, -50%);
    opacity: 1;


    position: absolute;
    top: 50%;
    left: 50%;
}

/* Up Next - Boost */
[up-next--container] button {
    transition: border 1s;
}

[up-next--container] button[allowed="false"i] {
    border-color: var(--color-red) !important;
}

[up-next--container] button[allowed="true"i][speeding="true"i] {
    box-sizing: content-box;

    border: 1px solid;
    border-image: conic-gradient(from var(--border-angle), #0000, var(--color-yellow)) 1;

    animation: 2s linear infinite spinning-border;
}

@keyframes up-next-speeding {
    from { border-color: var(--color-yellow) }
    to { border-color: transparent }
}

/* Loading / Spinner */
.tt-spinner {
    animation: 150ms ease 300ms 1 fade-in;
}

.tt-spinner::after {
    content: "";

    border: 2px solid #ffffff26;
    border-radius: 50%;
    border-left-color: #dedee3;
    display: block;

    height: 2rem;
    width: 2rem;

    position: relative;
    transform: translateZ(0);

    animation: 1s linear infinite spinner;
}

.tt-spinner:not(:empty)::after {
    display: inline-block;

    margin-left: 1rem;
    vertical-align: middle;
}

@keyframes spinner {
    0% { transform: rotate(0) }
    100% { transform: rotate(360deg) }
}

/* In Wallet */
/* https://www.bram.us/2021/01/29/animating-a-css-gradient-border/ */
[rainbow-border]:not([rainbow-border="false"i]) {
    box-sizing: content-box;

    border: 1px solid;
    border-image: conic-gradient(from var(--border-angle), red, orange, yellow, green, blue, indigo, violet, violet, indigo, blue, green, yellow, orange, red) 1;
}

[rainbow-border="true"i] {
    animation: 2s linear infinite spinning-border;
}

[rainbow-border][top-only] {
	border-bottom: 0;
	border-left: 0;
	border-right: 0;
}

[rainbow-border][bottom-only] {
	border-left: 0;
	border-right: 0;
	border-top: 0;
}

[rainbow-border][left-only] {
	border-right: 0;
	border-top: 0;
	border-bottom: 0;
}

[rainbow-border][right-only] {
	border-top: 0;
	border-bottom: 0;
	border-left: 0;
}

@keyframes spinning-border {
    from { --border-angle: 0deg }
    to { --border-angle: 360deg }
}

@property --border-angle {
    syntax: '<angle>';
    initial-value: 0deg;
    inherits: false;
}

[rainbow-text]:not([rainbow-text="false"i]) {
    background: linear-gradient(90deg, red, orange, yellow, green, blue, indigo, violet, violet, indigo, blue, green, yellow, orange, red);
    background-position-x: 0;
    background-size: 200% 100%;
    -webkit-background-clip: text;
            background-clip: text;
    text-fill-color: #fff4;
}

[rainbow-text="true"i] {
    animation: 2s linear infinite spinning-background;
}

[rainbow-text="true"i] [id*="reward"i][id*="header"i] * {
    color: #fff8 !important;
}

@keyframes spinning-background {
    0% { background-position-x: 0% }
    100% { background-position-x: 200% }
}

/* Picture-in-Picture */
[tt-pip], #tt-exit-pip {
    background: var(--color-background-button-secondary-default);
    border: 1px solid #0000;
    border-radius: .3rem;
    display: inline-block;
    text-align: center;

    margin: .15rem;
    padding: 1rem 1rem 0;
    vertical-align: top;

    transition: background .3s;
}

:is([tt-pip], #tt-exit-pip):hover {
    background: var(--color-background-button-secondary-hover);
}

[tt-pip]::after {
    content: "MINI";

    display: block;
    font-size: xx-small;
}

#tt-exit-pip::after {
    content: "EXIT";

    display: block;
    font-size: xx-small;
}

/* BetterTTV Emotes */
.tt-emote-bttv {
    display: inline-flex;

    height: 4rem;
    width: 4rem;
}

/* Rewards Calculator Text */
[tt-rewards-calc]::before, [tt-rewards-calc]::after {
    font-style: italic;
    text-align: center;

    width: -webkit-fill-available;
    width: -moz-available;
    width: stretch;
}

/* Rewards (timed-out) */
.reward-list-item[timed-out]:not([timed-out=""])::before {
    content: attr(timed-out);
    text-align: center;
    width: inherit;
    display: block;
    top: 1rem;
    transform: translate(0, 100%);
    z-index: 99999;
}

/* Mini player buttons */
.persistent-notification__popout {
    opacity: 0;
}

.persistent-notification--hover .persistent-notification__popout, .persistent-notification:hover .persistent-notification__popout {
    opacity: 1;
}

/* Resurrected messages */
[data-resurrected="true"i] .text-fragment {
    display: contents !important;
}

[data-resurrected="true"i]:not(:hover) {
    /* text-decoration: line-through; */
}

/* "Buy on {store}" */
.tt-store-purchase--container {
    background: var(--color-background-pill);
    border: 3px solid var(--color-background-pill);
    border-radius: 3px;
    color: var(--color-text-alt);
    display: inline-block;
    font-size: 12px;

    margin: 0 .25rem 0 0;
    padding: 0;

    height: -moz-fit-content;

    height: fit-content;
    width: -moz-fit-content;
    width: fit-content;
}

.tt-store-purchase--price, .tt-store-purchase--handler {
    box-shadow: 2px 2px 10px #0008;

    float: left;
    margin-left: 3px;
}

.tt-store-purchase--price {
    border: 0;
    border-radius: 3px;
    color: var(--color-text-alt);
    font-family: sans-serif;
    font-size: 13px;

    box-shadow: inset 0 0 20px 10px var(--color-background-alt);
    text-shadow: 1px 1px 3px var(--color-background-alt);

    padding: 5px 12px 4px;

    height: -webkit-fill-available;
    height: -moz-available;
    height: stretch;
}

.tt-store-purchase--handler {
    height: -webkit-fill-available;
    height: -moz-available;
    height: stretch;
}

.tt-store-purchase--handler a {
    cursor: pointer;

    background: linear-gradient(to right, var(--channel-color) 5%, var(--channel-color-contrast) 95%);
    border-radius: 3px;
    color: #d2efa9;
    display: inline-block;
    font-size: 14px;
    text-align: center;
    text-decoration: none !important;
    text-transform: unset;

    box-shadow: inset 0 0 20px 10px #0002;
    text-shadow: 1px 1px 2px #0004;

    line-height: 2;
    padding: 0px 11px;

    height: -webkit-fill-available;
    height: -moz-available;
    height: stretch;

    transition: background .5s ease, box-shadow .5s ease;
}

.is-steam .tt-store-purchase--handler a {
    background: linear-gradient(to right, #0cf 5%, #36f 95%);
}

.is-playstation .tt-store-purchase--handler a {
    background: linear-gradient(to right, #00ffff 5%, #0072ce 95%);
}

.is-xbox .tt-store-purchase--handler a {
    background: linear-gradient(to right, #44ff44 5%, #107c10 95%);
}

.is-nintendo .tt-store-purchase--handler a {
    background: linear-gradient(to right, #e60012 5%, #ac000d 95%);
}

.tt-store-purchase--handler a:hover {
    color: #fff;

    box-shadow: inset 0 0 20px 10px #0008;
}

[id^="tt-"][id$="-purchase"] {
    display: none;
}

:is([data-mature-content], [data-version-name])::before {
    border: 0;
    border-radius: 3px;
    color: var(--color-warn);
    display: inline-block;
    font-weight: bold;

    padding: 0 0 0 3px;
    position: absolute;
    transform: translate(0,-90%);

    width: -moz-fit-content;

    width: fit-content;
}

[data-mature-content]::before {
    text-transform: uppercase;
}

[data-mature-content]:not([data-mature-content="false"i]):not([data-mature-content=""i]), [data-version-name]:not([data-version-name=""i]) {
    padding-top: 1.5rem;
}

[data-mature-content]:not([data-mature-content="true"i]):not([data-mature-content="false"i]):not([data-mature-content=""i])::before {
    content: attr(data-mature-content);
}

[data-version-name]:not([data-version-name=""i])::before {
    content: attr(data-version-name);
}

[data-mature-content="true"i]::before {
    content: "Mature \1F51E\FE0F";
}
